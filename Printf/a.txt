# Variables
NAME = libftprintf.a
INCLUDE = include
LIBFT = libft
SRC_DIR = src/
OBJ_DIR = obj/
CC = gcc
CFLAGS = -Wall -Werror -Wextra -I$(INCLUDE)
RM = rm -f
AR = ar rcs

# Colors for terminal output
DEF_COLOR = \033[0;39m
GRAY = \033[0;90m
RED = \033[0;91m
GREEN = \033[0;92m
YELLOW = \033[0;93m
BLUE = \033[0;94m
MAGENTA = \033[0;95m
CYAN = \033[0;96m
WHITE = \033[0;97m

# Source and object files
SRC_FILES = ft_printf.c ft_printfchar.c ft_printftstring.c ft_printfhex.c \
            ft_printfdecimal.c ft_printfpointer.c ft_printfunsigned.c ft_uitoa.c \
            ft_itoa_base.c ft_ulitoa_base.c
SRC = $(addprefix $(SRC_DIR), $(SRC_FILES))
OBJ = $(addprefix $(OBJ_DIR), $(SRC_FILES:.c=.o))

# Object directory flag
OBJF = .cache_exists

# Default target
all: $(NAME)

# Create the library
$(NAME): $(OBJ)
	@make -C $(LIBFT)
	@cp libft/libft.a .
	@mv libft.a $(NAME)
	@$(AR) $(NAME) $(OBJ)
	@echo "$(GREEN)ft_printf compiled!$(DEF_COLOR)"

# Compile source files into object files
$(OBJ_DIR)%.o: $(SRC_DIR)%.c | $(OBJF)
	@echo "$(YELLOW)Compiling: $< $(DEF_COLOR)"
	@$(CC) $(CFLAGS) -c $< -o $@

# Create object directory if it doesn't exist
$(OBJF):
	@mkdir -p $(OBJ_DIR)

# Clean object files
clean:
	@$(RM) -rf $(OBJ_DIR)
	@make clean -C $(LIBFT)
	@echo "$(BLUE)ft_printf object files cleaned!$(DEF_COLOR)"

# Full clean, including the library
fclean: clean
	@$(RM) -f $(NAME)
	@$(RM) -f $(LIBFT)/libft.a
	@echo "$(CYAN)ft_printf executable files cleaned!$(DEF_COLOR)"
	@echo "$(CYAN)libft executable files cleaned!$(DEF_COLOR)"

# Rebuild everything
re: fclean all
	@echo "$(GREEN)Cleaned and rebuilt everything for ft_printf!$(DEF_COLOR)"

# Check code style
norm:
	@norminette $(SRC) $(INCLUDE) $(LIBFT) | grep -v Norme -B1 || true

# Phony targets to avoid conflicts with files
.PHONY: all clean fclean re norm

# Color variables
colors1 = \033[0;32m
colors2 = \033[0;33m
colors3 = \033[0;31m
colors4 = \033[0m

# Compiler and flags
CC = cc
CFLAGS = -Wall -Werror -Wextra -g

# Target and source files
NAME = libftprintf.a
SRCS = ft_printf.c ft_printfchar.c ft_printftstring.c ft_printfhex.c \
       ft_printfdecimal.c ft_printfpointer.c ft_printfunsigned.c ft_uitoa.c \
       ft_itoa_base.c ft_ulitoa_base.c
OBJS = $(SRCS:.c=.o)

# Libft path
LIBFT = libft
LIBFT_LIB = $(LIBFT)/libft.a

# Targets
all: $(NAME)

$(NAME): $(OBJS)
	@echo "$(colors1)Compiling libft...$(colors4)"
	@make -C $(LIBFT)
	@echo "$(colors1)Creating $(NAME)...$(colors4)"
	@ar rcs $(NAME) $(OBJS) $(LIBFT_LIB)

%.o: %.c
	@echo "$(colors2)Compiling $<...$(colors4)"
	@$(CC) $(CFLAGS) -c $< -o $@

clean:
	@echo "$(colors3)Cleaning object files...$(colors4)"
	@rm -f $(OBJS)
	@make clean -C $(LIBFT)

fclean: clean
	@echo "$(colors3)Removing $(NAME)...$(colors4)"
	@rm -f $(NAME)
	@make fclean -C $(LIBFT)

re: fclean all

.PHONY: all clean fclean re